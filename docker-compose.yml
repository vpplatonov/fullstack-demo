version: '3.9'

services:

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        container_name: frontend
        tty: true
        ports:
            - "3000:3000"
        volumes: 
            - ./frontend:/app
            - /app/node_modules
#            - static_volume:/app/public
        networks:
            - frontend

    mongodb:
        image: mongo
        container_name: mongo
        restart: unless-stopped
        command: mongod --auth
        environment:
            - MONGO_INITDB_ROOT_USERNAME=fullstack
            - MONGO_INITDB_ROOT_PASSWORD=vivanaturals
            - MONGO_INITDB_DATABASE=fullstackdemo
            - MONGODB_DATA_DIR=/data/db
        volumes:
            - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
            - mongodbdata:/data/db
        ports:
            - "27017-27019:27017-27019"
        networks:
            - backend

#   Database Manager
    mongo-express:
        image: mongo-express
        container_name: mongo-express
        ports:
            - "8081:8081"
        depends_on:
            - mongodb
        environment:
#            - ME_CONFIG_BASICAUTH_USERNAME=express
#            - ME_CONFIG_BASICAUTH_PASSWORD=123456
            - ME_CONFIG_MONGODB_SERVER=mongodb
            - ME_CONFIG_MONGODB_PORT=27017
            - ME_CONFIG_MONGODB_ADMINUSERNAME=fullstack
            - ME_CONFIG_MONGODB_ADMINPASSWORD=vivanaturals
        links:
            - mongodb
        networks:
            - backend

    api:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: backend-api
        command: gunicorn --bind 0.0.0.0:4000 app:app
        ports:
            - "4000:4000"
        environment:
            - MONGODB_HOST=mongodb
            - MONGODB_USERNAME=fullstack
            - MONGODB_PASSWORD=vivanaturals
        volumes:
            - appdata:/app
        depends_on:
            - mongodb
        networks:
            - frontend
            - backend

#    nginx:
#        build: ./nginx
#        container_name: nginx
#        volumes:
#            - static_volume:/app/public
#        ports:
#            - "80:80"
#        depends_on:
#            - frontend
#        networks:
#            - frontend
#            - backend
#        healthcheck:
#            test: ["CMD", "service", "nginx", "status"]
#            interval: 1s
#            timeout: 1s
#            retries: 60

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
volumes:
    mongodbdata:
        driver: local
    appdata:
        driver: local
#    static_volume:
#        driver: local